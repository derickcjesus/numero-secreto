function verificarSeOChutePossuiUmValorValido(chute) {
  const numero = +chute;

  //Condi√ß√£o caso o n√∫mero falado esteja inv√°lido
  if (chuteEhInvalido(numero)) {
    elementoChute.innerHTML += "<div>Valor inv√°lido</div>";
    return;
  }

  if (numeroEhMaiorOuMenorQueOValorPermitido(numero)) {
    elementoChute.innerHTML += `<div>Valor inv√°lido: Fale 
		um n√∫mero entre ${menorValor} e ${maiorValor}</div>`;
    return;
  }

  //Condi√ß√£o quando o n√∫mero de tentativas de chutes esgotar
  if (numeroDeTentativas == 0) {
    document.body.innerHTML = `<h1>GAMER OVER!</h1>
    <button id="jogar-novamente" class="btn-jogar" onclick="btnJogarNovamente()">
			Jogar novamente
		</button>`;
  }

  //Condi√ß√£o caso o n√∫mero falado seja v√°lido
  if (numero === numeroAleatorio) {
    document.body.innerHTML = `
		<h2>Voc√™ acertou üéâ</h2>
		<h3>O n√∫mero secreto era ${numeroAleatorio}</h3>

    <h3>Voc√™ acertou o n√∫mero secreto em ${quantidadeDeNumerosChutados} tentativas</h3>

		<button id="jogar-novamente" class="btn-jogar" onclick="btnJogarNovamente()">
			Jogar novamente
		</button>
		`;
  } else if (numero > numeroAleatorio) {
    elementoChute.innerHTML += `
		<div>O n√∫mero secreto √© menor üëá</div>`;
  } else {
    elementoChute.innerHTML += `
		<div>O n√∫mero secreto √© maior ‚òù</div>`;
  }
}

function chuteEhInvalido(numero) {
  return Number.isNaN(numero);
}

function numeroEhMaiorOuMenorQueOValorPermitido(numero) {
  return numero > maiorValor || numero < menorValor;
}

function btnJogarNovamente() {
  window.location.reload();
}
